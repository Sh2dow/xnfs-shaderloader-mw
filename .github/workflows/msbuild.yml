name: MSBuild

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*.*'  # Triggers on tags 

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Find solution file dynamically
        run: |
          $solution = Get-ChildItem -Recurse -Filter *.sln | Select-Object -First 1
          $solutionName = [System.IO.Path]::GetFileNameWithoutExtension($solution.Name)
          echo "SOLUTION_NAME=$solutionName" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: |
            ./vcpkg
            ./vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Update submodules
        run: git submodule update --init --recursive

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install v143 toolset
        run: |
          choco install visualstudio2017buildtools --params "--add Microsoft.VisualStudio.Component.VC.v143"

      - name: Build
        run: msbuild ${{ env.SOLUTION_NAME }}.sln /p:Configuration=Release /p:Platform=x86 /p:PlatformToolset=v143

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: XNFS-ShaderLoader-MW-artifacts
          path: Release/**/*  # Uploads everything in the Release folder

      - name: Zip Build Artifacts
        run: |
          if (Test-Path Release/${{ env.SOLUTION_NAME }}) {
            Compress-Archive -Path Release/${{ env.SOLUTION_NAME }}/* -DestinationPath ${{ env.SOLUTION_NAME }}.zip
          } else {
            echo "Release folder not found, skipping zip step"
            exit 1
          }
        shell: pwsh

      - name: Generate Changelog
        run: |
          echo "# Changelog" > ${{ github.workspace }}/CHANGELOG.txt
          echo "" >> ${{ github.workspace }}/CHANGELOG.txt
          git log --pretty=format:"- %h %s" -10 >> ${{ github.workspace }}/CHANGELOG.txt
        shell: pwsh

      - name: Create Release with Assets and Changelog
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          files: ${{ env.SOLUTION_NAME }}.zip
          body_path: ${{ github.workspace }}/CHANGELOG.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
